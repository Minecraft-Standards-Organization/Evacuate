name: Auto Close Tagged Issues

on:
  schedule:
    - cron: '32 10 * * *' # Runs daily at 13:30 UTC
  workflow_dispatch:

jobs:
  close-tagged-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Close issues with specific tags
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labelsToClose = ["status: unable to reproduce", "status: wontfix"];
            const minutesThreshold = 1;
            const commentBody = `This issue has been automatically closed because it has the label \`status: unable to reproduce\` or \`status: wontfix\`, and the original author hasn't commented within ${minutesThreshold} minute. If you believe this was closed in error, feel free to reopen or provide additional information.`;

            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
              labels: labelsToClose.join(","),
              per_page: 100
            });

            const now = new Date();

            for (const issue of issues) {
              const author = issue.user.login;

              const comments = await github.paginate(github.rest.issues.listComments, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                per_page: 100
              });

              const authorComment = comments.find(comment => comment.user.login === author);
              const lastAuthorActivity = authorComment ? new Date(authorComment.created_at) : new Date(issue.created_at);
              const minutesSinceActivity = (now - lastAuthorActivity) / (1000 * 60);

              if (minutesSinceActivity >= minutesThreshold) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: commentBody
                });

                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: "closed"
                });

                console.log(`Closed issue #${issue.number}`);
              }
            }
